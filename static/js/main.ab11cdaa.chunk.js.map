{"version":3,"sources":["components/navbar-components/algorithms.jsx","components/navbar-components/size.jsx","components/navbar-components/speed.jsx","components/navbar.jsx","components/frame.jsx","components/footer.jsx","components/helper/pause.js","components/helper/generator.js","components/helper/swap.js","components/helper/compare.js","components/visualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Algorithms","props","className","name","id","onChange","e","target","value","algorithms","map","element","type","Size","lengths","Speed","speeds","Navbar","state","handleClick","preventDefault","response","onClick","newList","this","start","href","React","Component","Frame","getClass","list","index","style","height","key","Footer","color","rel","pause","speed","a","Promise","resolve","setTimeout","generator","length","counter","num","Math","floor","random","push","parseInt","swap","array","index1","index2","cache","compare","value1","value2","sign","Number","Visualizer","size","algorithm","running","option","setState","generateList","console","log","lock","bubbleSort","selectionSort","insertionSort","mergeSort","quickSort","heapSort","done","i","j","modify","transition","minIndex","mergeDivider","end","Mid","merge","mid","k","x","y","quickDivider","partition","pivot","prevIndex","heapify","currSize","currLargest","Rchild","Lchild","status","Boolean","document","querySelector","Fragment","bind","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ab11cdaa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Algorithms = (props) => {\r\n    return (\r\n        <span className=\"options\">\r\n            <select \r\n                name=\"Algorithm\" id=\"menu\" className=\"algo-menu\"\r\n                onChange = {(e) => props.onChange(e.target.value, \"algo\")}>\r\n                {props.algorithms.map(element => (\r\n                    <option \r\n                        key = {element.value}\r\n                        value = {element.value}>\r\n                        {element.type}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </span>\r\n    );\r\n}\r\n \r\nexport default Algorithms;","import React from 'react';\r\n\r\nconst Size = (props) => {\r\n    return (\r\n        <span className=\"options\">\r\n            <select \r\n                name=\"size\" id=\"menu\" className=\"size-menu\"\r\n                onChange = {(e) => props.onChange(e.target.value, \"size\")}>\r\n                {props.lengths.map(element => (\r\n                    <option \r\n                        key = {10*element}\r\n                        value = {element}>\r\n                        {element}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </span>\r\n    );\r\n}\r\n \r\nexport default Size;","import React from 'react';\r\n\r\nconst Speed = (props) => {\r\n    return (\r\n        <span className=\"options\">\r\n            <select \r\n                name=\"Algorithm\" id=\"menu\" className=\"speed-menu\"\r\n                onChange = {(e) => props.onChange(e.target.value, \"speed\")}>\r\n                {props.speeds.map(element => (\r\n                    <option \r\n                        key = {element}\r\n                        value = {element}>\r\n                        {element}x\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </span>\r\n    );\r\n}\r\n \r\nexport default Speed;","import React from 'react';\r\n\r\nimport Algorithms from './navbar-components/algorithms';\r\nimport Size from './navbar-components/size';\r\nimport Speed from './navbar-components/speed';\r\n\r\nclass Navbar extends React.Component {\r\n    state = {\r\n        Algorithms: [\r\n\t\t\t{ value: 1, type: 'Bubble Sort' },\r\n\t\t\t{ value: 2, type: 'Selection Sort' },\r\n\t\t\t{ value: 3, type: 'Insertion Sort' },\r\n\t\t\t{ value: 4, type: 'Merge Sort' },\r\n\t\t\t{ value: 5, type: 'Quick Sort' },\r\n\t\t\t{ value: 6, type: 'Heap Sort' }\r\n\t\t],\r\n\t\tlengths: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100],\r\n\t\tspeeds: [0.50, 0.75, 1.00, 2.00, 4.00]\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        this.props.response();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navbar\" id=\"navbar\">\r\n                <button id=\"random\" onClick = {() => this.props.newList(1)}>Random</button>\r\n                <Algorithms \r\n                    onChange = {this.props.onChange}\r\n                    algorithms = {this.state.Algorithms}\r\n                />\r\n                <Size \r\n                    onChange = {this.props.onChange}\r\n                    lengths = {this.state.lengths}\r\n                />\r\n                <Speed \r\n                    onChange = {this.props.onChange}\r\n                    speeds = {this.state.speeds}\r\n                />\r\n                <button id=\"start\" onClick = {() => this.props.start()}>Start</button>\r\n                <a \r\n                    className=\"icon\" \r\n                    onClick = {(e) => this.handleClick(e)}\r\n                    href = \"/\">\r\n                    <i className=\"fa fa-bars\"></i>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Navbar;","import React from 'react';\r\n\r\nclass Frame extends React.Component {\r\n    render() { \r\n        return (\r\n            <div className=\"frame\">\r\n                <div className=\"array\">\r\n                    {this.props.list.map((element, index) => (\r\n                        <div\r\n                            className = {this.getClass(element.value)}\r\n                            key = {index}\r\n                            style = {{height : `${4*element.key}px`}}\r\n                            value = {element.key}>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getClass = (value) => {\r\n        if(value === 0) return 'cell';\r\n        else if(value === 1) return 'cell current';\r\n        return 'cell done';\r\n    };\r\n}\r\n \r\nexport default Frame;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>\r\n                Created with <i className=\"fa fa-heart\" style={{color: \"#FF5252\"}}></i> by\r\n                <a href=\"https://www.linkedin.com/in/mansimar-anand/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"link\">\r\n                    <span> </span>\r\n                    Mansimar Anand\r\n                </a>\r\n            </p>\r\n        </footer>\r\n    );\r\n}\r\n \r\nexport default Footer;","const pause = async(speed) => {\r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve();\r\n        }, 450/speed);\r\n    });\r\n}\r\n\r\nexport default pause;","const generator = (length) => {\r\n    let list = [];\r\n    let min = 1, max = 100;\r\n    for (let counter = 0; counter < length ; ++counter) {\r\n        let num = Math.floor(Math.random() * (max - min + 1) + min);\r\n        list.push({key: parseInt(num), value: 0});\r\n    }\r\n    return list;\r\n};\r\n\r\nexport default generator;","const swap = async (array, index1, index2) => {\r\n    let cache = array[index1].key;\r\n    array[index1].key = array[index2].key;\r\n    array[index2].key = cache;\r\n};\r\n\r\nexport default swap;","const compare = (value1, value2, sign) => {\r\n    if(sign === '>') {\r\n        return (Number(value1) > Number(value2));\r\n    }\r\n    else {\r\n        return (Number(value1) < Number(value2));\r\n    }\r\n};\r\n\r\nexport default compare;","import React from 'react';\r\n\r\n// components\r\nimport Navbar from './navbar';\r\nimport Frame from './frame';\r\nimport Footer from './footer';\r\n\r\n// helpers\r\nimport pause from './helper/pause';\r\nimport generator from './helper/generator';\r\nimport swap from './helper/swap';\r\nimport compare from './helper/compare';\r\n\r\nclass Visualizer extends React.Component {\r\n    state = {\r\n        list: [],\r\n        size: 10,\r\n        speed: 1,\r\n        algorithm: 1,\r\n        running: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.generateList();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.onChange();\r\n        this.generateList();\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <React.Fragment>\r\n                <Navbar\r\n                    start = {this.start}\r\n                    response = {this.response}\r\n                    newList = {this.generateList}\r\n                    onChange = {this.onChange.bind(this)}\r\n                />\r\n                <Frame \r\n                    list = {this.state.list}\r\n                />\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    onChange = (value, option) => {\r\n        if(option === \"algo\" && !this.state.running) {\r\n            this.setState({ algorithm: Number(value) });\r\n        }\r\n        else if(option === \"speed\") {\r\n            this.setState({ speed: Number(value) });\r\n        }\r\n        else if(option === \"size\" && !this.state.running) {\r\n            this.setState({ size: Number(value) });\r\n            this.generateList();\r\n        }\r\n        console.log(this.state);\r\n    };\r\n\r\n    generateList = (value = 0) => {\r\n        if((this.state.list.length !== this.state.size && !this.state.running) || Number(value) === 1) {\r\n            let list = generator(this.state.size);\r\n            this.setState({ list: list });\r\n        }\r\n\t};\r\n\r\n    start = async() => {\r\n        this.lock(true);\r\n        let algorithm = this.state.algorithm;\r\n        if(algorithm === 1) await this.bubbleSort();\r\n        if(algorithm === 2) await this.selectionSort();\r\n        if(algorithm === 3) await this.insertionSort();\r\n        if(algorithm === 4) await this.mergeSort();\r\n        if(algorithm === 5) await this.quickSort();\r\n        if(algorithm === 6) await this.heapSort();\r\n        this.done(this.state.list);\r\n        this.lock(false);\r\n    };\r\n\r\n    bubbleSort = async() => {\r\n        let array = [...this.state.list], length = this.state.size;\r\n        for(let i = 0 ; i < length-1 ; ++i) {\r\n            for(let j = 0 ; j < length-i-1 ; ++j) {\r\n                await this.modify(array, [j, j+1], 1);\r\n                if(compare(array[j].key, array[j+1].key, '>')) {\r\n                    await swap(array, j, j+1);\r\n                    await this.transition(array);\r\n                }\r\n                await this.modify(array, [j, j+1], 0);\r\n            }\r\n            await this.modify(array, [this.state.size-i-1], 2);\r\n        }\r\n        await this.modify(array, [0], 2);\r\n    };\r\n\r\n    selectionSort = async() => {\r\n        let array = [...this.state.list], length = this.state.size;\r\n        for(let i = 0 ; i < length ; ++i) {\r\n            let minIndex = i;\r\n            for(let j = i+1 ; j < length ; ++j) {\r\n                await this.modify(array, [minIndex, j], 1);\r\n                if(compare(array[j].key, array[minIndex].key, '<')) {\r\n                    await this.modify(array, [minIndex], 0);\r\n                    minIndex = j;\r\n                    await this.modify(array, [minIndex], 1);\r\n                }\r\n                await this.modify(array, [j], 0);\r\n            }\r\n            await this.modify(array, [i], 1);\r\n            await swap(array, minIndex, i);\r\n            await this.modify(array, [i, minIndex], 0);\r\n        }\r\n    };\r\n\r\n    insertionSort = async() => {\r\n        let array = [...this.state.list], length = this.state.size;\r\n        for(let i = 0 ; i < length-1 ; ++i) {\r\n            for(let j = i ; j >= 0 && compare(array[j].key, array[j+1].key, '>') ; --j) {\r\n                await this.modify(array, [j, j+1], 1);\r\n                await swap(array, j, j+1);\r\n                await this.modify(array, [j, j+1], 0);\r\n            }\r\n        }\r\n    };\r\n\r\n    mergeSort = async() => {\r\n        await this.mergeDivider(0, this.state.size-1);\r\n    };\r\n    mergeDivider = async(start, end) => {\r\n        if(start < end) {\r\n            let Mid = Math.floor((end+start)/2);\r\n            await this.mergeDivider(start, Mid);\r\n            await this.mergeDivider(Mid+1, end);\r\n            await this.merge(start, Mid, end);\r\n        }\r\n    };\r\n    merge = async(start, mid, end) => {\r\n        let list = [...this.state.list], array = [];\r\n        let i = start, j = mid+1;\r\n        while(i <= mid && j <= end) {\r\n            if(compare(list[i].key, list[j].key, '>')) array.push(list[j++].key);\r\n            else array.push(list[i++].key);\r\n        }\r\n        while(i <= mid) {\r\n            array.push(Number(list[i++].key));\r\n        }\r\n        while(j <= end) {\r\n            array.push(Number(list[j++].key));\r\n        }\r\n        for(let k = start ; k <= end ; ++k) {\r\n            await this.modify(list, [k], 1);\r\n        }\r\n        for(let x = 0, y = start ; y <= end && x < array.length ; ++x, ++y) {\r\n            list[y].key = Number(array[x]);\r\n            this.setState({ list: list });\r\n        }\r\n        for(let k = start ; k <= end ; ++k) {\r\n            await this.modify(list, [k], 0);\r\n        }\r\n    };\r\n\r\n    quickSort = async() => {\r\n        await this.quickDivider(0, this.state.size-1);\r\n    };\r\n    quickDivider = async(start, end) => {\r\n        if(start < end) {\r\n            let pivot = await this.partition(start, end);\r\n            await this.quickDivider(start, pivot-1);\r\n            await this.quickDivider(pivot+1, end);\r\n        }\r\n    };\r\n    partition = async(start, end) => {\r\n        let array = [...this.state.list];\r\n        let prevIndex = start - 1;\r\n        await this.modify(array, [end], 1);\r\n        for(let i = start ; i < end ; ++i) {\r\n            await this.modify(array, [i], 1);\r\n            if(compare(array[i].key, array[end].key, '<')) {\r\n                prevIndex += 1;\r\n                await this.modify(array, [prevIndex], 1);\r\n                await swap(array, i, prevIndex);\r\n                await this.modify(array, [prevIndex], 0);\r\n            }\r\n            await this.modify(array, [i], 0);\r\n        }\r\n        await swap(array, prevIndex+1, end);\r\n        await this.modify(array, [end], 0);\r\n        return prevIndex+1;\r\n    };\r\n\r\n    heapSort = async() => {\r\n        let array = [...this.state.list];\r\n        for(let i = array.length-1 ; i >= 0 ; --i) {\r\n            await this.heapify(array, array.length, i);\r\n        }\r\n        for(let i = this.state.size-1 ; i > 0 ; --i) {\r\n            await this.modify(array, [i, 0], 1);\r\n            await swap(array, i, 0);\r\n            await this.modify(array, [i, 0], 0);\r\n            await this.heapify(array, i, 0);\r\n        }\r\n    };\r\n    heapify = async(array, currSize, index) => {\r\n        let currLargest = index;\r\n        let Lchild = 2*index+1, Rchild = 2*index+2;\r\n        if(Lchild < currSize && compare(array[currLargest].key, array[Lchild].key, '<')) {\r\n            currLargest = Lchild;\r\n        }\r\n        if(Rchild < currSize && compare(array[currLargest].key, array[Rchild].key, '<')) {\r\n            currLargest = Rchild;\r\n        }\r\n        if(currLargest !== index) {\r\n            await this.modify(array, [currLargest, index], 1);\r\n            await swap(array, currLargest, index);\r\n            await this.modify(array, [currLargest, index], 0);\r\n            await this.heapify(array, currSize, currLargest);\r\n        }\r\n    };\r\n\r\n    lock = (status) => {\r\n        this.setState({ running: Boolean(status) });\r\n    };\r\n\r\n    done = async(array) => {\r\n        for(let i = 0 ; i < array.length ; ++i) {\r\n            await this.modify(array, [i], 2);\r\n        }\r\n    };\r\n\r\n    modify = async (array, index, value) => {\r\n        for(let i = 0 ; i < index.length ; ++i) {\r\n            array[index[i]].value = value;\r\n        }\r\n        await this.transition(array);\r\n    };\r\n\r\n    transition = async(newList) => {\r\n        this.setState({list: newList});\r\n        await pause(this.state.speed);\r\n    };\r\n    \r\n    response = () => {\r\n        let Navbar = document.querySelector(\".navbar\");\r\n        if(Navbar.className === \"navbar\") Navbar.className += \" responsive\";\r\n        else Navbar.className = \"navbar\";\r\n    };\r\n}\r\n \r\nexport default Visualizer;","import React from 'react';\nimport Visualizer from './components/visualizer';\nimport './App.css';\n\nclass App extends React.Component {\n\t\n    render() { \n        return (\n\t\t\t<Visualizer />\n       );\n\t}\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}